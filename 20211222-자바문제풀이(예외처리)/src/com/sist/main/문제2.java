package com.sist.main;
/*
 * 2. try-catch-finally 블록에 대한 설명 중 틀린 것은 무엇입니까?
① try { } 블록에는 예외가 발생할 수 있는 코드를 작성한다.
   => 정상 수행 , 에러가 발생할 수 있다 => catch()
      ======= finally 수행 => 밑에 문장 수행 
② catch { } 블록은 try { } 블록에서 발생한 예외를 처리하는 블록이다.
  => try에서 수행 => 에러가 발생 => catch로 이동 (예외 복구, 예외 확인)
  => getMessage()
  => printStackTrace()
③ try { } 블록에서 return문을 사용하면 finally { } 블록은 실행되지 않는다.
  => finally => 무조건 수행하는 문장이다 
④ catch { } 블록은 예외의 종류별로 여러 개를 작성할 수 있다.
  => catch() 여러개 => 예상되는 에러 많다 
     => Exception

 */
public class 문제2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
